global
    daemon
    user haproxy
    group haproxy
    stats socket /run/haproxy/admin.sock user haproxy group haproxy mode 660 level admin
    stats timeout 2m

defaults
    mode http
    timeout connect 10s
    timeout client 1m
    timeout server 1m
    option httplog
    option dontlognull
    retries 3

# HAProxy Stats
listen stats
    bind *:8404
    mode http
    stats enable
    stats uri /stats
    stats refresh 10s
    stats admin if TRUE
    http-request use-service prometheus-exporter if { path /stats/prometheus }

# PostgreSQL Master (Write)
listen postgres-master
    bind *:5432
    mode tcp
    option httpchk
    http-check expect status 200
    default-server inter 3s fall 3 rise 2 on-marked-down shutdown-sessions
    
    # Patroni health check cho master
    server postgres-node1 postgres-node1:5432 maxconn 100 check port 8008 httpchk GET /master
    server postgres-node2 postgres-node2:5432 maxconn 100 check port 8008 httpchk GET /master
    server postgres-node3 postgres-node3:5432 maxconn 100 check port 8008 httpchk GET /master
    server postgres-node4 postgres-node4:5432 maxconn 100 check port 8008 httpchk GET /master

# PostgreSQL Replica (Read)
listen postgres-replica
    bind *:5433
    mode tcp
    option httpchk
    http-check expect status 200
    default-server inter 3s fall 3 rise 2 on-marked-down shutdown-sessions
    balance roundrobin
    
    # Patroni health check cho replica
    server postgres-node1 postgres-node1:5432 maxconn 100 check port 8008 httpchk GET /replica
    server postgres-node2 postgres-node2:5432 maxconn 100 check port 8008 httpchk GET /replica
    server postgres-node3 postgres-node3:5432 maxconn 100 check port 8008 httpchk GET /replica
    server postgres-node4 postgres-node4:5432 maxconn 100 check port 8008 httpchk GET /replica 