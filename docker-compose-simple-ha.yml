version: "3.8"

services:
  # PostgreSQL Master
  postgres-master:
    image: postgres:15
    container_name: postgres-master
    hostname: postgres-master
    environment:
      POSTGRES_DB: pos_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres123
      POSTGRES_REPLICATION_USER: replicator
      POSTGRES_REPLICATION_PASSWORD: replicator123
      PGUSER: postgres
      POSTGRES_HOST_AUTH_METHOD: trust
    command: >
      postgres
      -c wal_level=replica
      -c max_wal_senders=10
      -c max_replication_slots=10
      -c hot_standby=on
      -c archive_mode=on
      -c archive_command='test ! -f /archive/%f && cp %p /archive/%f'
      -c listen_addresses='*'
      -c hba_file=/var/lib/postgresql/data/pg_hba.conf
    volumes:
      - ./data/master:/var/lib/postgresql/data
      - ./scripts:/docker-entrypoint-initdb.d
      - ./config/pg_hba.conf:/etc/postgresql/pg_hba.conf
      - ./archive:/archive
    ports:
      - "5432:5432"
    networks:
      - postgres-ha
    restart: unless-stopped

  # PostgreSQL Replica 1
  postgres-replica1:
    image: postgres:15
    container_name: postgres-replica1
    hostname: postgres-replica1
    environment:
      PGUSER: postgres
      POSTGRES_PASSWORD: postgres123
      PGPASSWORD: replicator123
    command: >
      bash -c "
        until pg_isready -h postgres-master -p 5432 -U postgres; do
          echo 'Waiting for master...'
          sleep 2
        done
        
        rm -rf /var/lib/postgresql/data/*
        pg_basebackup -h postgres-master -D /var/lib/postgresql/data -U replicator -v -P -R
        
        chmod 700 /var/lib/postgresql/data
        chown -R postgres:postgres /var/lib/postgresql/data
        
        echo \"hot_standby = on\" >> /var/lib/postgresql/data/postgresql.conf
        touch /var/lib/postgresql/data/standby.signal
        
        exec gosu postgres postgres
      "
    volumes:
      - replica1-data:/var/lib/postgresql/data
      - ./archive:/archive
    ports:
      - "5433:5432"
    networks:
      - postgres-ha
    depends_on:
      - postgres-master
    restart: unless-stopped

  # PostgreSQL Replica 2
  postgres-replica2:
    image: postgres:15
    container_name: postgres-replica2
    hostname: postgres-replica2
    environment:
      PGUSER: postgres
      POSTGRES_PASSWORD: postgres123
      PGPASSWORD: replicator123
    command: >
      bash -c "
        until pg_isready -h postgres-master -p 5432 -U postgres; do
          echo 'Waiting for master...'
          sleep 2
        done
        
        rm -rf /var/lib/postgresql/data/*
        pg_basebackup -h postgres-master -D /var/lib/postgresql/data -U replicator -v -P -R
        
        chmod 700 /var/lib/postgresql/data
        chown -R postgres:postgres /var/lib/postgresql/data
        
        echo \"hot_standby = on\" >> /var/lib/postgresql/data/postgresql.conf
        touch /var/lib/postgresql/data/standby.signal
        
        exec gosu postgres postgres
      "
    volumes:
      - replica2-data:/var/lib/postgresql/data
      - ./archive:/archive
    ports:
      - "5434:5432"
    networks:
      - postgres-ha
    depends_on:
      - postgres-master
    restart: unless-stopped

  # PostgreSQL Replica 3
  postgres-replica3:
    image: postgres:15
    container_name: postgres-replica3
    hostname: postgres-replica3
    environment:
      PGUSER: postgres
      POSTGRES_PASSWORD: postgres123
      PGPASSWORD: replicator123
    command: >
      bash -c "
        until pg_isready -h postgres-master -p 5432 -U postgres; do
          echo 'Waiting for master...'
          sleep 2
        done
        
        rm -rf /var/lib/postgresql/data/*
        pg_basebackup -h postgres-master -D /var/lib/postgresql/data -U replicator -v -P -R
        
        chmod 700 /var/lib/postgresql/data
        chown -R postgres:postgres /var/lib/postgresql/data
        
        echo \"hot_standby = on\" >> /var/lib/postgresql/data/postgresql.conf
        touch /var/lib/postgresql/data/standby.signal
        
        exec gosu postgres postgres
      "
    volumes:
      - replica3-data:/var/lib/postgresql/data
      - ./archive:/archive
    ports:
      - "5435:5432"
    networks:
      - postgres-ha
    depends_on:
      - postgres-master
    restart: unless-stopped

  # PostgreSQL Replica 4 - NEW NODE for 5-node quorum
  postgres-replica4:
    image: postgres:15
    container_name: postgres-replica4
    hostname: postgres-replica4
    environment:
      PGUSER: postgres
      POSTGRES_PASSWORD: postgres123
      PGPASSWORD: replicator123
    command: >
      bash -c "
        until pg_isready -h postgres-master -p 5432 -U postgres; do
          echo 'Waiting for master...'
          sleep 2
        done
        
        rm -rf /var/lib/postgresql/data/*
        pg_basebackup -h postgres-master -D /var/lib/postgresql/data -U replicator -v -P -R
        
        chmod 700 /var/lib/postgresql/data
        chown -R postgres:postgres /var/lib/postgresql/data
        
        echo \"hot_standby = on\" >> /var/lib/postgresql/data/postgresql.conf
        touch /var/lib/postgresql/data/standby.signal
        
        exec gosu postgres postgres
      "
    volumes:
      - replica4-data:/var/lib/postgresql/data
      - ./archive:/archive
    ports:
      - "5436:5432"
    networks:
      - postgres-ha
    depends_on:
      - postgres-master
    restart: unless-stopped

  # HAProxy Load Balancer
  haproxy:
    image: haproxy:2.8
    container_name: haproxy
    hostname: haproxy
    volumes:
      - ./config/haproxy-simple.cfg:/usr/local/etc/haproxy/haproxy.cfg:ro
    ports:
      - "5439:5439" # Write port (master only)
      - "5440:5440" # Read port (replicas)
      - "8080:8080" # Stats dashboard
    networks:
      - postgres-ha
    depends_on:
      - postgres-master
      - postgres-replica1
      - postgres-replica2
      - postgres-replica3
      - postgres-replica4
    restart: unless-stopped

  # Prometheus for metrics collection
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    hostname: prometheus
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    ports:
      - "9090:9090"
    networks:
      - postgres-ha
    restart: unless-stopped

  # Postgres Exporter for Master
  postgres-exporter-master:
    image: prometheuscommunity/postgres-exporter:latest
    container_name: postgres-exporter-master
    hostname: postgres-exporter-master
    environment:
      DATA_SOURCE_NAME: "postgresql://postgres:postgres123@postgres-master:5432/pos_db?sslmode=disable"
    ports:
      - "9187:9187"
    networks:
      - postgres-ha
    depends_on:
      - postgres-master
    restart: unless-stopped

  # Postgres Exporter for Replica 1
  postgres-exporter-replica1:
    image: prometheuscommunity/postgres-exporter:latest
    container_name: postgres-exporter-replica1
    hostname: postgres-exporter-replica1
    environment:
      DATA_SOURCE_NAME: "postgresql://postgres:postgres123@postgres-replica1:5432/pos_db?sslmode=disable"
    ports:
      - "9188:9187"
    networks:
      - postgres-ha
    depends_on:
      - postgres-replica1
    restart: unless-stopped

  # Postgres Exporter for Replica 2
  postgres-exporter-replica2:
    image: prometheuscommunity/postgres-exporter:latest
    container_name: postgres-exporter-replica2
    hostname: postgres-exporter-replica2
    environment:
      DATA_SOURCE_NAME: "postgresql://postgres:postgres123@postgres-replica2:5432/pos_db?sslmode=disable"
    ports:
      - "9189:9187"
    networks:
      - postgres-ha
    depends_on:
      - postgres-replica2
    restart: unless-stopped

  # Postgres Exporter for Replica 3
  postgres-exporter-replica3:
    image: prometheuscommunity/postgres-exporter:latest
    container_name: postgres-exporter-replica3
    hostname: postgres-exporter-replica3
    environment:
      DATA_SOURCE_NAME: "postgresql://postgres:postgres123@postgres-replica3:5432/pos_db?sslmode=disable"
    ports:
      - "9190:9187"
    networks:
      - postgres-ha
    depends_on:
      - postgres-replica3
    restart: unless-stopped

  # Postgres Exporter for Replica 4 - NEW
  postgres-exporter-replica4:
    image: prometheuscommunity/postgres-exporter:latest
    container_name: postgres-exporter-replica4
    hostname: postgres-exporter-replica4
    environment:
      DATA_SOURCE_NAME: "postgresql://postgres:postgres123@postgres-replica4:5432/pos_db?sslmode=disable"
    ports:
      - "9191:9187"
    networks:
      - postgres-ha
    depends_on:
      - postgres-replica4
    restart: unless-stopped

  # Grafana Dashboard
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    hostname: grafana
    environment:
      GF_SECURITY_ADMIN_PASSWORD: admin123
      GF_INSTALL_PLUGINS: grafana-clock-panel,grafana-simple-json-datasource
    volumes:
      - ./grafana/datasources:/etc/grafana/provisioning/datasources:ro
      - ./grafana/dashboards:/var/lib/grafana/dashboards:ro
      - grafana-storage:/var/lib/grafana
    ports:
      - "3000:3000"
    networks:
      - postgres-ha
    depends_on:
      - prometheus
    restart: unless-stopped

networks:
  postgres-ha:
    driver: bridge
    ipam:
      config:
        - subnet: 172.25.0.0/16

volumes:
  grafana-storage:
  replica1-data:
  replica2-data:
  replica3-data:
  replica4-data:
